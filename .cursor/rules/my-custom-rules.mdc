---
description: |
  ### CSS Rejections / رفضات الـ CSS
  - **Low Quality**: The design is not of high enough quality to warrant being sold as a premium item. | التصميم غير ذو جودة كافية لتبرير بيعه كمنتج مميز.
  - **Too General**: Many CSS files are available for free and so items must distinguish themselves. They need to go above and beyond what is available in free files. | العديد من ملفات الـ CSS متوفرة مجاناً، لذا يجب على العناصر التميز عن غيرها. يجب أن تتفوق على الملفات المجانية المتاحة.
  - **Similarity**: If a new submission is too similar to items that are already available on the Envato Market, it will be rejected. To be accepted, items must be unique, or of a higher quality than the currently existing items. | إذا كانت الإضافة الجديدة مشابهة للعناصر الموجودة بالفعل في سوق Envato، فسيتم رفضها. يجب أن تكون العناصر فريدة أو بجودة أعلى من العناصر الحالية.
  - **Inline CSS**: Do not use inline CSS. Export all styling to an external stylesheet. | لا تستخدم الـ CSS المضمنة في HTML. يجب تصدير جميع الأنماط إلى ملف CSS خارجي.
  - **Validation**: Excluding any vendor-specific prefixes, all of your code must validate. Otherwise, it will be rejected. | باستثناء الـ prefixes الخاصة بالمزودين، يجب أن يكون كل كودك صالحًا. إذا لم يكن صالحًا، فسيتم رفضه.
  - **Inline -> Block**: Do not place block level elements (div, h2, etc.) within inline elements (span, em). | لا تضع عناصر من نوع block (مثل div، h2، إلخ) داخل عناصر من نوع inline (مثل span، em).
  - **Icons**: Do not use svg or path in icons, you can use fas fa . | لا تستخدم الـ SVG أو الـ path في الأيقونات. يمكنك استخدام `fas fa` بدلاً من ذلك.
  - **Blade Files**: Don’t use `@push` and `<style> @script` in blade files. Use original CSS and JS files in layout imports. | لا تستخدم `@push` و `<style> @script` في ملفات الـ Blade. استخدمها في ملفات الـ CSS و JS الأصلية في الـ Layout.
  - **No New CSS or JS Files**: Do not create new CSS or JS files. Only use the existing files and import them in the layout. | لا يمكن إنشاء ملفات CSS أو JS جديدة. يجب استخدام الملفات المتوفرة والمستوردة في ملف الـ Layout.
  - **Single Class for Design**: Designs should follow a unified class structure to ensure consistency across all pages. | يجب أن تتبع التصاميم هيكل كلاس موحد لضمان التناسق عبر جميع الصفحات.
  - **Responsive Blade Pages**: Blade pages must be fully responsive, ensuring compatibility with all screen sizes. | يجب أن تكون صفحات الـ Blade متجاوبة بالكامل، لضمان التوافق مع جميع أحجام الشاشات.
  - **No Duplicate CSS or JS Code**: Avoid duplicating any CSS or JS code across the files. | يجب تجنب تكرار أي أكواد CSS أو JS عبر الملفات.
  - **No Inline JavaScript or CSS in Blade Files**: Do not place JavaScript, CSS, `@script`, or `@style` tags directly inside Blade files. | لا تضع أكواد JavaScript أو CSS أو `@script` أو `@style` مباشرة داخل ملفات الـ Blade.
  - **No Import of JS/CSS in Blade Files**: Do not import JavaScript or CSS files directly within Blade files. Use the layout file for imports. | لا تستورد ملفات JavaScript أو CSS داخل ملفات الـ Blade مباشرة. استخدم ملف الـ Layout للاستيراد.
  - **Use Unified CSS and JS for Each Role**: All CSS and JS files for the following roles must be placed in the specified directories and cannot create any additional files or duplicate code:
    - **Admin**: 
      - `public/backend/css/`
      - `public/backend/js/`
    - **Frontend**:
      - `public/frontend/css/`
      - `public/frontend/js/`
    | يجب أن توضع جميع ملفات CSS و JS الخاصة بالأدوار التالية في المجلدات المحددة، ولا يُسمح بإنشاء أي ملفات أخرى أو تكرار الكود:
    - **Admin**: 
      - `public/backend/css/`
      - `public/backend/js/`
    - **Frontend**:
      - `public/frontend/css/`
      - `public/frontend/js/`

  ### Restrictions on CSS Frameworks / القيود على إطارات العمل للـ CSS
  - **No Tailwind CSS**: Do not use Tailwind CSS. | لا تستخدم **Tailwind CSS**.
  - **No Vite**: Do not use Vite for asset bundling or compilation. | لا تستخدم **Vite** في تجميع الأصول أو تجميع الملفات.

  ### JavaScript Rejections / رفضات الـ JavaScript
  - **Degradation**: If an item requires JavaScript to work, you must provide an operable degraded version as well. For example, picture sliders should still be functional, at a minimal level, even when JavaScript is disabled. The practice of progressive enhancement should be employed to ensure that the script gracefully degrades in such a way that it remains minimally accessible to all users (or at least the vast majority). | إذا كان العنصر يحتاج إلى JavaScript للعمل، يجب أن تقدم نسخة تعمل بشكل جزئي عندما يكون JavaScript غير مفعل. على سبيل المثال، يجب أن تظل العروض التقديمية للصور تعمل على الأقل بشكل بسيط حتى في حالة تعطيل JavaScript. يجب اتباع ممارسة التحسين التدريجي لضمان أن السكربت يتدهور بشكل ملائم ليظل متاحًا لجميع المستخدمين (أو على الأقل الغالبية العظمى).
  - **Complexity**: The item is not of sufficient complexity or it lacks features. Items must be unique and have additional features and/or superior implementation to differentiate from readily available free files. | العنصر ليس معقدًا بما فيه الكفاية أو يفتقر إلى الميزات. يجب أن تكون العناصر فريدة ولها ميزات إضافية أو تنفيذ متميز لتتفوق على الملفات المجانية المتاحة.
  - **Implementation**: The item's implementation is simply not up to the level of quality expected. Thought must be given to application design with abstraction and intuitive API for the buyer. It must be easy to customise and integrate with a buyer's own design and preferences. | تنفيذ العنصر ليس بالمستوى المطلوب من الجودة. يجب التفكير في تصميم التطبيق مع التجريد وواجهة برمجة التطبيقات (API) بديهية للمشتري. يجب أن يكون من السهل تخصيصه ودمجه مع تصميمات المشتري وتفضيلاته.
  - **Blade Files**: Don’t use `@php` in blade files. Always fetch the data from the Controller instead. | لا تستخدم `@php` في ملفات الـ Blade. يجب جلب البيانات من الكنترولر بدلاً من ذلك.
  - **Blade Files**: Don’t use `@push` and `<style> @script` in blade files. Use original CSS and JS files in layout imports. | لا تستخدم `@push` و `<style> @script` في ملفات الـ Blade. استخدمها في ملفات الـ CSS و JS الأصلية في الـ Layout.
  - **Remove Unused Code**: Any unused CSS or JS code should be removed to keep the files clean and efficient. Duplicates should be merged to avoid unnecessary redundancy. | يجب حذف أي أكواد CSS أو JS غير مستخدمة للحفاظ على نظافة الملفات وكفاءتها. يجب دمج الأكواد المكررة لتجنب التكرار غير الضروري.
  - **Commitment to Envato's terms** | الالتزام بشروط Envato.

  ### PHP Rejections / رفضات الـ PHP
  - **Ensure your code follows modern PHP standards (PSR-12)** | تأكد من أن الكود يتبع معايير PHP الحديثة (PSR-12).
  - **Security Measures**: Implement robust security measures such as input validation, SQL injection prevention, XSS protection. | نفّذ تدابير أمان قوية مثل التحقق من المدخلات، منع حقن SQL، وحماية XSS.
  - **Too General**: With an abundance of open source solutions available, we strive for unique functionality or a unique twist on existing functionality. | مع توفر العديد من الحلول المفتوحة المصدر، نس
  - **Implement robust security measures (input validation, SQL injection prevention, XSS protection)**
  - **Implementation: Code should be well written, secure and well commented. A clean application design and proper abstraction is implicitly expected.**
  - **Lack of features: Items need to have more than one focus, a single simple feature provides little attraction for buyers.**
  - **Ease of Integration: The code must be easy for the purchaser to include in existing projects. API should be intuitive and code should be documented clearly. Separate config files are an excellent place to start.**
  - **Lack of Market Prospects: Occasionally items are well written, but unfortunately lack sales prospects. Please consider whether purchasers will pay money for such a functionality.**